<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[$j = jQuery.noConflict();
$j('#myframe1').load(function() {
    $j("#myframe1").contents().find("a").attr("target", "_parent");
});
setInterval(function(){ $j("#myframe1").contents().find("a").attr("target","_parent");}, 1500);
Current('All', 'All', true);

function renderGraphWithparams() {
    var len = $j("#TabList").children().length;
    for (var i = 0; i < len; i++) {
        var val = $j("#TabList").children()[i].className;
        if (val == "active") {
            val = $j("#TabList").children()[i].innerHTML;
            if (val == "Current Milestone") {
                this.Current($j("#milestone").val(), $j("#hardwareType").val(), false);
            } else {
                this.Next($j("#milestone").val(), $j("#hardwareType").val(), false);
            }
        }
    }
}

function myFunction(a) {
    var arr = [];
    arr.push(a);
    arr.push("Software Tracking");
	arr.push("Individual View");
    var loadingDialog = new GlideModal("x_caci_cisco_bcs_My_Feedback_Form", true, 'modal-lg');
    loadingDialog.setTitle('Comments for Software Tracking');
    loadingDialog.setPreference("sysparm_message", JSON.stringify(arr));
    loadingDialog.render();
}

function Current(parm1, parm2, flag) {
    if (flag == true) {
        var select = document.getElementById("milestone");
        var length = select.options.length;
        for (i = length - 1; i >= 0; i--) {
            select.options[i] = null;
        }
        var select = document.getElementById("hardwareType");
        var length = select.options.length;
        for (i = length - 1; i >= 0; i--) {
            select.options[i] = null;
        }
        var ga = new GlideAjax("Cisco_ClientServerBridge");
        ga.addParam('sysparm_name', 'getOptionsCurrentMilestoneSoftwareLifecycle');
        ga.getXML(gettingOptions)

        function gettingOptions(response) {
            var answer = response.responseXML.documentElement.getAttribute("answer");
            answer = JSON.parse(answer);
            for (var k in answer) {
                var select = document.getElementById(k);
                var option = document.createElement("option");
                option.text = 'All';
                select.add(option);
                for (var i = 0; i < answer[k].length; i++) {
                    var option = document.createElement("option");
                    option.text = answer[k][i];
                    select.add(option);
                }
            }
        }
    }
    $j("#hardwareType").val(parm2);
    $j("#milestone").val(parm1);
    $j("#current").addClass("active");
    $j("#next").removeClass("active");
    var filter1 = "";
    var filter2 = "";
    if (parm1 == "All" && parm2 != "All") {
        //filter1 = "ANYTHING";
        filter2 = "=" + parm2;
    } else if (parm2 == "All" && parm1 != "All") {
        //filter2 = "ANYTHING";
        filter1 = "=" + parm1;
    } else if (parm1 == "All" && parm2 == "All") {
       // filter1 = "ANYTHING";
        //filter2 = "ANYTHING";
    } else {
        filter1 = "=" + parm1;
        filter2 = "=" + parm2
    }
    $j('#myframe1').attr('src', "/x_caci_cisco_bcs_cisco_software_lifecycle_list.do?sysparm_fixed_query=current_milestone" + filter1 + "^sw_type" + filter2);

    //current_milestone=EoSWM^sw_type=IOS XR
    renderFirstGraph("currentmilestone", "#add8e6", parm1, parm2,"No. of Devices per Time Period");
    renderSecondGraph("current", parm1, parm2,"No. of Devices per Software Version");
}

function Next(parm1, parm2, flag) {
    if (flag == true) {
        var select = document.getElementById("milestone");
        var length = select.options.length;
        for (i = length - 1; i >= 0; i--) {
            select.options[i] = null;
        }
        var select = document.getElementById("hardwareType");
        var length = select.options.length;
        for (i = length - 1; i >= 0; i--) {
            select.options[i] = null;
        }
        var ga = new GlideAjax("Cisco_ClientServerBridge");
        ga.addParam('sysparm_name', 'getOptionsNextMilestoneSoftwareLifecycle');
        ga.getXML(gettingOptions)

        function gettingOptions(response) {
            var answer = response.responseXML.documentElement.getAttribute("answer");
            var result = JSON.parse(answer);
            answer = JSON.parse(answer);
            for (var k in answer) {
                var select = document.getElementById(k);
                var option = document.createElement("option");
                option.text = 'All';
                select.add(option);
                for (var i = 0; i < answer[k].length; i++) {
                    var option = document.createElement("option");
                    option.text = answer[k][i];
                    select.add(option);
                }
            }
        }
    }
    $j("#hardwareType").val(parm2);
    $j("#milestone").val(parm1);
    $j("#next").addClass("active");
    $j("#current").removeClass("active");
    var filter1 = "";
    var filter2 = "";
    if (parm1 == "All" && parm2 != "All") {
        //filter1 = "ANYTHING";
        filter2 = "=" + parm2;
    } else if (parm2 == "All" && parm1 != "All") {
        //filter2 = "ANYTHING";
        filter1 = "=" + parm1;
    } else if (parm1 == "All" && parm2 == "All") {
        //filter1 = "ANYTHING";
        //filter2 = "ANYTHING";
    } else {
        filter1 = "=" + parm1;
        filter2 = "=" + parm2
    }
    $j('#myframe1').attr('src', "/x_caci_cisco_bcs_cisco_software_lifecycle_list.do?sysparm_fixed_query=next_milestone" + filter1 + "^sw_type" + filter2);
    renderFirstGraph("Nextmilestone", "#add8e6", parm1, parm2,"No. of Devices per Time Period");
    renderSecondGraph("next", parm1, parm2,"No. of Devices per Software Version");
}

function renderSecondGraph(tab, param1, param2,title) {
    var ga = new GlideAjax("Cisco_ClientServerBridge");
    ga.addParam('sysparm_name', 'softwareDrillDownViewForDistintElementID');
    ga.addParam('sysparm_param1', param1);
    ga.addParam('sysparm_param2', param2);
    ga.addParam('sysparm_tab', tab);
    ga.getXML(HardwareLifecycleData1);

    function HardwareLifecycleData1(response) {
        var answer = response.responseXML.documentElement.getAttribute("answer");
        //var result = JSON.parse(answer);
		
		var result = (answer) ? JSON.parse(answer) : {};
		
        //var resultArr = [];
		var resultArr = (answer) ? [] : [{"data":[{}]}];
        var categories = [];
        var xAxis = {};
        var c = 0;
		
        for (var k in result) {
            var obj = {};
            obj.name = k;
            categories.push(k);
            obj.data = [{
                x: c,
                y: parseInt(result[k]),
                color: "#00008B"
            }]
            c++;
            resultArr.push(obj);

        }
        xAxis.categories = categories;
		
        renderGraph("report2", title, resultArr, "column", xAxis, "Device Count");
    }
}

function renderFirstGraph(tab, color, parm1, parm2,title) {
    var ga = new GlideAjax("Cisco_ClientServerBridge");
    ga.addParam('sysparm_name', 'softwareLifecycleDrilldown');
    ga.addParam('sysparm_milestone', parm1);
    ga.addParam('sysparm_type', parm2);
    ga.addParam('sysparm_tab', tab);
    ga.getXML(HardwareLifecycleData);

    function HardwareLifecycleData(response) {
        var answer = response.responseXML.documentElement.getAttribute("answer");
		
        var categories = [];
        var result = JSON.parse(answer);
        var arr = [];
        result.forEach(function callback(value, index) {
            var obj = {};
            switch (index) {
                case 0:
                    {
                        obj.data = [{
                            x: 0,
                            y: result[0],
                            color: color
                        }];
                        obj.name = "Past";
                        categories.push("Past");
                        arr.push(obj);
                        break;
                    }
                case 1:
                    {
                        obj.data = [{
                            x: 1,
                            y: result[1],
                            color: color
                        }];
                        obj.name = "0-1y";
                        categories.push("0-1y");
                        arr.push(obj);
                        break;
                    }
                case 2:
                    {
                        obj.data = [{
                            x: 2,
                            y: result[2],
                            color: color
                        }];
                        obj.name = "1y-2y";
                        categories.push("1y-3y");
                        arr.push(obj);
                        break;
                    }
                case 3:
                    {
                        obj.data = [{
                            x: 3,
                            y: result[3],
                            color: color
                        }];
                        obj.name = "2y-3y";
                        categories.push("2y-3y");
                        arr.push(obj);
                        break;
                    }
                case 4:
                    {
                        obj.data = [{
                            x: 4,
                            y: result[4],
                            color: color
                        }];
                        obj.name = ">3y";
                        categories.push(">3y");
                        arr.push(obj);
                        break;
                    }
                case 5:
                    {
                        obj.data = [{
                            x: 5,
                            y: result[5],
                            color: color
                        }];
                        obj.name = "Not Announced";
                        categories.push("Not Announced");
                        arr.push(obj);
                        break;
                    }
            }
        });
        var xAxis = {};
        xAxis.categories = categories;
		
        renderGraph("report1", title, arr, "column", xAxis, "Device Count");
    }
}

function renderGraph(div, title, output, graphType, xAxis, yaxis) {
    ScriptLoader.getScripts('x_caci_cisco_bcs.Cisco_RenderGraph.jsdbx', function() {
        x_caci_cisco_bcs.Cisco_RenderGraph.renderBarChart(div, title, output, graphType, xAxis, yaxis);
    });
}]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_caci_cisco_bcs_Software_Lifecycle_DrillDown.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" rel="stylesheet"/>	
<script src="https://code.highcharts.com/highcharts.js"></script>
	<div class="rowHead">
	<div class="row">
			<div class="col-xs-9">
				<div class="row">
					<div class="col-xs-12"><h1 class="header">Software Tracking</h1></div>
					<div class="col-xs-12">
					<div style="margin-left:10px">
					<ul role="tablist" id="TabList" el-type="li" class="button-group nav nav-segmented accessible-menu">
						<li role="tab" tabindex="0" title="" aria-label="Reports created by me"  class="active"  onclick="Current('All','All',true)" id="current">Current Milestone</li>
						<li role="tab" tabindex="0" title="" id="next" aria-label="Reports created by me" class="" onclick="Next('All','All',true)">Next Milestone</li>
					</ul>
				</div>
					</div>
				</div>
			</div>
			<div class="col-xs-3">
				<div class="stars"  style="float:right;">
				<h4>Please provide your feedback for Software Tracking</h4>
				<div class="outer_stars">
					<input class="star star-5" id="star-5" type="radio" name="star" value="5" onclick="myFunction(5)" />
    			<label class="star star-5" for="star-5"></label> 
    			<input class="star star-4" id="star-4" type="radio" name="star"  value="4" onclick="myFunction(4)"/>
    			<label class="star star-4" for="star-4"></label>
    			<input class="star star-3" id="star-3" type="radio" name="star"  value="3" onclick="myFunction(3)"/>
    			<label class="star star-3" for="star-3"></label>
    			<input class="star star-2" id="star-2" type="radio" name="star"  value="2" onclick="myFunction(2)"/>
				<label class="star star-2" for="star-2"></label>
				<input class="star star-1" id="star-1" type="radio" name="star"  value="1" onclick="myFunction(1)"/>
				<label class="star star-1" for="star-1"></label>
				</div>
				</div>
			</div>
		</div>
		
		<div class="col-xs-2">
		<div class="row">
			<div class="col-xs-12">
			<div >
					<label style="margin-top:40px"   class="control-label"><strong>Select Milestone</strong></label>
					<select  id="milestone" onchange="renderGraphWithparams()" class="form-control select2-basic" style="height:auto;" >
						<option value="All" >All</option>
						
					</select>
				</div>
			</div>
			<div class="col-xs-12">
			<div>
					<label style="margin-top:40px"   class="control-label"><strong>Software Type</strong></label>
					<select  id="hardwareType" onchange="renderGraphWithparams()" class="form-control select2-basic" style="height:auto;" >
						<option value="All" >All</option>
						
					</select>
				</div>
			</div>
			
		</div>
		</div>
		<div class="col-xs-5" id="report1"></div>
		<div class="col-xs-5" id="report2"></div>
	</div>
	<br></br>
	<div class="row">
	     <iframe id="myframe1" src="/x_caci_cisco_bcs_cisco_software_lifecycle_list.do" width="100%" height="450" style="border:none;"></iframe>
	</div>

	
	

	<style>
			.header {
			margin:20px;
			}
			.milestone-choice {
			margin:20px;
			}
			.hardware-list {
			margin-top:50px;
			<!-- margin-left:20px;
   margin-right:20px; -->
			}
			.highcharts-figure {
			width:60%;
			float:right;
			margin-top:20px;
			}
			
			.rowHead{
		margin-left:10px;
		}
.outer_stars{
			margin-right:40px;
			margin-top:0px;
		}
	div.stars {
 	width: 270px;
	display: inline-block;
}

input.star { display: none; }
label.star {
	float: right;
	padding: 10px;
	font-size: 28px;
	color: #444;
	transition: all .2s;
}
.head{
  	font-size: 2em;
}
input.star:checked ~ label.star:before {
	content: '\f005';
	color: #FD4;
	transition: all .25s;
}
input.star-5:checked ~ label.star:before {
	color: #FE7;
	text-shadow: 0 0 15px #952;
}
		
#feedback{
		padding-left:20px;
		padding-top:15px;
		}
 input.star-1:checked ~ label.star:before { color: #F62; }
label.star:hover { transform: rotate(-15deg) scale(1.3); }
label.star:before {
content: '\f006';
font-family: FontAwesome;
}
		</style>
	

</j:jelly>]]></html>
        <name>Software_Lifecycle_DrillDown</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-10-28 12:39:14</sys_created_on>
        <sys_id>89065c832f046410bd2551172799b649</sys_id>
        <sys_mod_count>136</sys_mod_count>
        <sys_name>Software_Lifecycle_DrillDown</sys_name>
        <sys_package display_value="Cisco BCS Operational Insights" source="x_caci_cisco_bcs">56b8d9362f3310108956ea5ef699b62d</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Cisco BCS Operational Insights">56b8d9362f3310108956ea5ef699b62d</sys_scope>
        <sys_update_name>sys_ui_page_89065c832f046410bd2551172799b649</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-01-14 11:58:35</sys_updated_on>
    </sys_ui_page>
</record_update>
