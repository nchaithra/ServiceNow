<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[var $j = jQuery.noConflict();


function myFunction(a) {
    var arr = [];
    arr.push(a);
    arr.push("Software Compliance Tracking");
    arr.push("Individual View");
    var loadingDialog = new GlideModal("x_caci_cisco_bcs_My_Feedback_Form", true, 'modal-lg');
    loadingDialog.setTitle('Comments for Software Compliance Tracking');
    loadingDialog.setPreference("sysparm_message", JSON.stringify(arr));
    loadingDialog.render();
}

$j('#myframe').load(function() {

    $j("#myframe").contents().find("a").attr("target", "_parent");
});

setInterval(function() {
    $j("#myframe").contents().find("a").attr("target", "_parent");
}, 1500);

getSWComplianceInfo();

function getSWComplianceInfo() {

    var bridgeAjax = new GlideAjax("Cisco_ClientServerBridge");
    bridgeAjax.addParam('sysparm_name', "getSWComplianceDrilldownInfo");
    bridgeAjax.getXML(getSWComplianceDrilldownInfoResponse);
}

function getSWComplianceDrilldownInfoResponse(response) {
    var answer = response.responseXML.documentElement.getAttribute("answer");
    var result = JSON.parse(answer);
    //alert(JSON.stringify(result) + result.length);
    var title = ["Compliance by track(Top 10)", "Compliance and Flexible Compliance(Top 5)", "Software track Ratings"];

    for (var j = 0; j < result.length; j++) {
        var xAxis = {};
        var categories = [];
        var data_array = [];
        //  var series_data = [];
        if (j == 0) {
            var result_2 = result[j];
            var compliant = [];
            var non_compliant = [];

            result_2.forEach(function callback(value, index) {
                categories.push(value.key);

                if (value.value.Compliant) {
                    compliant.push(parseInt(value.value.Compliant));
                }
                if (value.value.NonCompliant) {
                    non_compliant.push(parseInt(value.value.NonCompliant));
                }

            });

            var output = [{
                    name: 'Compliant',
                    data: compliant
                },
                {
                    name: 'NonCompliant',
                    data: non_compliant
                }
            ];

        } else if (j == 1) {
            var result_1 = result[j];
            var TrackCompliance = [];
            var FlexibleCompliance = [];
            result_1.forEach(function callback(value, index) {
                categories.push(value.key);
                if (value.value.track) {
                    TrackCompliance.push(parseInt(value.value.track));

                }
                if (value.value.flex) {
                    FlexibleCompliance.push(parseInt(value.value.flex));
                }

            });
            var output1 = [{
                    name: 'Compliance percent',
                    data: TrackCompliance,
                    stack: 'Track'

                },
                {
                    name: 'Flexible Compliance percent',
                    data: FlexibleCompliance,
                    stack: 'Flex'
                }
            ];
            xAxis = categories;

        } else if (j > 1) {
            for (var i in result[j]) {
                data_array.push({
                    name: i + ' [' + result[j][i] + ']',
                    y: parseInt(result[j][i])
                });
                // series_data.push(parseInt(result[j][i]));
                categories.push(i);
            }
        }
        xAxis.categories = categories;

        if (j == 1) {
            //alert('enter group graph' + title[j] + JSON.stringify(xAxis) + JSON.stringify(output1));
            renderGroupChart("report" + j, title[j], output1, "column", xAxis, "Percent");
        } else if (j == 2) {
            x_caci_cisco_bcs.Cisco_RenderGraph.renderPieChart("report" + j, title[j], data_array, "pie", xAxis);
        } else {
            //alert('enter group graph' + title[j] + JSON.stringify(xAxis) + JSON.stringify(output));
            renderGraph("report" + j, title[j], output, "column", xAxis, "Software track Device Count");

        }

    }
}

function renderGraph(reportID, titleData, seriesData, graphType, xaxis, yAxis) {

    Highcharts.setOptions({
        lang: {
            thousandsSep: ""
        }
    });
    Highcharts.chart(reportID, {
        chart: {
            type: graphType,
            renderTo: reportID,
            reflow: true,
            spacingBottom: 15,
            spacingTop: 10,
            spacingLeft: 10,
            spacingRight: 10,

        },
        //colors: colors,
        title: {
            text: titleData
        },
        credits: {
            enabled: false
        },

        xAxis: xaxis,

        //                  xAxis: {
        //                     categories: xaxis,
        //                     labels: {
        //                        formatter: function() {
        //                              return this.value.substring(0, 8);
        //                          }
        //                     }
        //                 },

        stackLabels: {
            enabled: true,
            style: {
                fontWeight: 'bold',
                color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
            }
        },



        legend: {
            align: 'right',
            x: -30,
            verticalAlign: 'top',
            y: 25,
            floating: true,
            backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || 'white',
            borderColor: '#CCC',
            borderWidth: 1,
            shadow: false
        },
        yAxis: {
            min: 0,
            title: {
                text: yAxis
            }
        },
        tooltip: {
            headerFormat: '<b>{point.x}</b><br/>',
            pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
        },

        //                 tooltip: {
        //                     headerFormat: '<b>{point.x}</b><br/>',
        //                     pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}',
        //                     formatter: function() {
        //                         return '<b>' + this.x + '</b><br/>' +
        //                             this.series.name + ': ' + this.y + '<br/>' +
        //                             'Total: ' + this.point.stackTotal;
        //                     }

        //                 },
        plotOptions: {
            column: {
                showInLegend: false,
                pointPadding: 0,
                borderWidth: 0,
                groupPadding: 0,
                shadow: false,
                stacking: 'normal',
                pointWidth: 25,
                dataLabels: {
                    enabled: true,
                    color: '#FFFFFF'
                }

            }
        },
        exporting: {
            enabled: false
        },
        series: seriesData



    });

}
/*function renderGraph(reportId, title, output, graphType, xAxis, yaxis) {
	alert('enter func group graph' + reportId+ title+ JSON.stringify(output)+ graphType+ JSON.stringify(xAxis)+ yaxis);
    ScriptLoader.getScripts('x_caci_cisco_bcs.Cisco_RenderGraph.jsdbx', function() {
        x_caci_cisco_bcs.Cisco_RenderGraph.renderstackedGraph(reportId, title, output, graphType, xAxis, yaxis);
    });
}*/

// function rendergroupgraph(reportId, title, output, graphType, xAxis, yaxis) {
//     ScriptLoader.getScripts('x_caci_cisco_bcs.Cisco_RenderGraph.jsdbx', function() {
//         x_caci_cisco_bcs.Cisco_RenderGraph.renderGroupChart(reportId, title, output, graphType, xAxis, yaxis);
//     });
// }



function renderGroupChart(reportID, titleData, seriesData, graphType, xaxis, yAxis) {
    Highcharts.setOptions({
        //colors: ['#191970', '#4169E1']
    });
    Highcharts.chart(reportID, {
        chart: {
            type: graphType,
            reflow: true,
            spacingBottom: 15,
            spacingTop: 10,
            spacingLeft: 10,
            spacingRight: 10,
        },



        title: {
            text: titleData
        },



        xAxis: {
            categories: xaxis,
            labels: {
                formatter: function() {
                    return this.value.substring(0, 8);
                }
            }
        },




        yAxis: {
            min: 0,
            title: {
                text: yAxis
            }
        },
        credits: {
            enabled: false
        },
        plotOptions: {
            column: {
                dataLabels: {
                    enabled: true
                }
            }
        },
        tooltip: {
            //valueSuffix: " (1000 MT)",
            // stickOnContact: true,
            //backgroundColor: 'rgba(255, 255, 255, 0.93)'
        },
        legend: {
            enabled: true
        },
        exporting: {
            enabled: false
        },
        series: seriesData
    });
}]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_caci_cisco_bcs_SW Compliance Drilldown.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
	<g:evaluate var="jvar_urlLink" object="true" jelly="true">
		var id = new Cisco_ClientServerBridge().getclientid();
	id;	
	</g:evaluate>
	<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" rel="stylesheet"/>	
	<g:inline template="reporting_includes.xml" />	
	<body>

		<div class="row">
			<div class="col-xs-9 SoftwareType">
				<h1 class="header" style="margin-left:20px" >Software Compliance</h1>
			</div>
		
<!-- 			<div class="col-xs-3">
				<div class="stars"  style="float:right;">
					<h4>Please provide your feedback for Software Compliance</h4>
					<div class="outer_stars">
						<input class="star star-5" id="star-5" type="radio" name="star" value="5" onclick="myFunction(5)" />
						<label class="star star-5" for="star-5"></label> 
						<input class="star star-4" id="star-4" type="radio" name="star"  value="4" onclick="myFunction(4)"/>
						<label class="star star-4" for="star-4"></label>
						<input class="star star-3" id="star-3" type="radio" name="star"  value="3" onclick="myFunction(3)"/>
						<label class="star star-3" for="star-3"></label>
						<input class="star star-2" id="star-2" type="radio" name="star"  value="2" onclick="myFunction(2)"/>
						<label class="star star-2" for="star-2"></label>
						<input class="star star-1" id="star-1" type="radio" name="star"  value="1" onclick="myFunction(1)"/>
						<label class="star star-1" for="star-1"></label></div>
				</div>
			</div> -->
		</div>



		<div class="wrapper container-fluid">
			<div class="d-inline row">
				<div class="col-xs-4" id="report0" ></div>
				<div class="col-xs-4" id="report1"></div>
				<div class="col-xs-4" id="report2"></div>
			</div>
		</div>
		<div id="sw_compliance_table">
			<iframe id="myframe" src="/x_caci_cisco_bcs_cisco_software_track_summary_list.do?sysparm_fixed_query=customer_id=${jvar_urlLink}" width="100%" height="450" style="border:none;"></iframe>
			<style>

				.StarsAlign{
				margin-left:25%;
				margin-top:0px;
				}
				
				.outer_stars{
				margin-right:40px;
				}
				div.stars {
				width: 270px;
				display: inline-block;
				}
				#submit{
				float:right;
				}
				input.star { display: none; }
				label.star {
				float: right;
				padding: 10px;
				font-size: 28px;
				color: #444;
				transition: all .2s;
				}
				.head{
				font-size: 2em;
				}
				input.star:checked ~ label.star:before {
				content: '\f005';
				color: #FD4;
				transition: all .25s;
				}
				input.star-5:checked ~ label.star:before {
				color: #FE7;
				text-shadow: 0 0 15px #952;
				}

				#feedback{
				padding-left:20px;
				padding-top:15px;
				}
				input.star-1:checked ~ label.star:before { color: #F62; }
				label.star:hover { transform: rotate(-15deg) scale(1.3); }
				label.star:before {
				content: '\f006';
				font-family: FontAwesome;
				}
			</style>
		</div>
	</body>
	<g:requires name="x_caci_cisco_bcs.Cisco_RenderGraph.jsdbx" />
</j:jelly>]]></html>
        <name>SW Compliance Drilldown</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-24 12:11:44</sys_created_on>
        <sys_id>5dcdbc3f9752c1108986fef3a253aff8</sys_id>
        <sys_mod_count>89</sys_mod_count>
        <sys_name>SW Compliance Drilldown</sys_name>
        <sys_package display_value="Cisco BCS Operational Insights" source="x_caci_cisco_bcs">56b8d9362f3310108956ea5ef699b62d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cisco BCS Operational Insights">56b8d9362f3310108956ea5ef699b62d</sys_scope>
        <sys_update_name>sys_ui_page_5dcdbc3f9752c1108986fef3a253aff8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-26 08:39:18</sys_updated_on>
    </sys_ui_page>
</record_update>
